## ---------------------------------------- ##
## @lib: gem functions                      ##
## @author: Giuseppe Ricupero               ##
## @date: 2020-12-09 16.45                  ##
## @description:                            ##
## install / uninstall / update functions   ##
## related to the ruby gems package manager ##
## ---------------------------------------- ##
init() { # {{{
	# load package manager agnostic functions
	mandatory_import "${myLIB}/agnostic"

	# add gem executables to PATH
	gem_bin_path="$(ruby -r rubygems -e 'puts Gem.user_dir')"
	already_in_variable PATH "${gem_bin_path}" || { 
		eval "$(generate_export_string PATH gem_bin_path)"
		append_line_if_needed '[ -x "$(command -v ruby)" ] && [ -x "$(command -v gem)" ] && export PATH="$(ruby -r rubygems -e '"'"'puts Gem.user_dir'"'"')/bin:${PATH}"' "${BASH_PATHS}"
	}
} # }}}

install() { # {{{
	local -a packages=(${@})
	for package in "${packages[@]}"; do
		gem install --user-install "${package}"
		log_package "${package}"
	done
} # }}}

uninstall() { # {{{
	local -a packages=(${@})
	for package in "${packages[@]}"; do
		gem uninstall --user-install "${package}"
		unlog_package "${package}"
	done
} # }}}

update() { # {{{
	while read -r package; do
		slog -h2 "${package_manager} update ${package}"
		gem update --user-install "${package}"
	done < "${log_file}"
} # }}}

list() { # {{{
	while read -r package; do
		slog -h2 "${package_manager} info ${package}"
		gem info "${package}"
	done < "${log_file}"
} # }}}

init
# vim: ft=sh:fdm=marker
